[tool.poetry]
name = "lp-det"
version = "0.1.0"
description = ""
authors = ["Elias Dargham <elias.dargham@net.usj.edu.lb>", "Anthony Tabet <anthony.tabet2@net.usj.lb>"]
readme = "README.md"
packages = [{include = "detector_training", from = "src"}, {include = "inference_tracking", from = "src"}]

[tool.poetry.dependencies]
python = "^3.12"
flask = "^3.1.0"
torch = "v2.5.0"
torchvision = "v0.20.0"
ultralytics = "^8.3.40"
protobuf = "^3.20.0"
pydantic = "^2.9.2"
omegaconf = "^2.3.0"
python-dotenv = "^1.0.1"
deep-sort-realtime = "^1.3.2"
onnx = "^1.17.0"
loguru = "^0.7.3"
prometheus-client = "^0.21.1"
ultralytics = "^8.3.49"
mlflow = "^2.19.0"

[tool.poetry.scripts]
lp-det-train = "detector_training.train:main"
lp-det-infer = "inference_tracking.infer:main"

[tool.poetry.group.dev.dependencies]
ruff = "^0.8.3"
mypy = "^1.13.0"
pytest = "^8.3.4"
pdoc = "^15.0.1"
invoke = "^2.2.0"

[tool.ruff]
line-length = 88
select = ["E", "F", "W", "I", "D", "C90", "B", "S"]  # B: Bandit (security), S: Docstrings
fixable = ["F", "I"]  # Automatically fix these categories

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
files = ["src"]
ignore_missing_imports = true

[[tool.poetry.source]]
name = "pytorch-gpu"
url = "https://download.pytorch.org/whl/cu124"
priority = "explicit"


[[tool.poetry.source]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
priority = "explicit"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
